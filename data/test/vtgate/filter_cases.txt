# No where clause
"select id from user"
{
  "Original": "select id from user",
  "Instructions": {
    "PlanID": "SelectScatter",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select id from user",
    "FieldQuery": "select id from user where 1 != 1"
  }
}

# Single table unique vindex route
"select id from user where user.id = 5"
{
  "Original": "select id from user where user.id = 5",
  "Instructions": {
    "PlanID": "SelectEqualUnique",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select id from user where user.id = 5",
    "FieldQuery": "select id from user where 1 != 1",
    "Vindex": "user_index",
    "Values": 5
  }
}

# Single table multiple unique vindex match
"select id from music where id = 5 and user_id = 4"
{
  "Original": "select id from music where id = 5 and user_id = 4",
  "Instructions": {
    "PlanID": "SelectEqualUnique",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select id from music where id = 5 and user_id = 4",
    "FieldQuery": "select id from music where 1 != 1",
    "Vindex": "user_index",
    "Values": 4
  }
}

# Single table multiple non-unique vindex match
"select id from user where costly = 'aa' and name = 'bb'"
{
  "Original": "select id from user where costly = 'aa' and name = 'bb'",
  "Instructions": {
    "PlanID": "SelectEqual",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select id from user where costly = 'aa' and name = 'bb'",
    "FieldQuery": "select id from user where 1 != 1",
    "Vindex": "name_user_map",
    "Values": "bb"
  }
}

# Single table multiple non-unique vindex match for IN clause
"select id from user where costly in ('aa', 'bb') and name in ('aa', 'bb')"
{
  "Original": "select id from user where costly in ('aa', 'bb') and name in ('aa', 'bb')",
  "Instructions": {
    "PlanID": "SelectIN",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select id from user where costly in ('aa', 'bb') and name in ::_vals",
    "FieldQuery": "select id from user where 1 != 1",
    "Vindex": "name_user_map",
    "Values": [
      "aa",
      "bb"
    ]
  }
}

# Single table complex in clause
"select id from user where name in (col, 'bb')"
{
  "Original": "select id from user where name in (col, 'bb')",
  "Instructions": {
    "PlanID": "SelectScatter",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select id from user where name in (col, 'bb')",
    "FieldQuery": "select id from user where 1 != 1"
  }
}

# Single table equality route with val arg
"select id from user where name = :a"
{
  "Original": "select id from user where name = :a",
  "Instructions": {
    "PlanID": "SelectEqual",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select id from user where name = :a",
    "FieldQuery": "select id from user where 1 != 1",
    "Vindex": "name_user_map",
    "Values": ":a"
  }
}

# Single table equality route with unsigned value
"select id from user where name = 0xFFFFFFFFFFFFFFFF"
{
  "Original": "select id from user where name = 0xFFFFFFFFFFFFFFFF",
  "Instructions": {
    "PlanID": "SelectEqual",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select id from user where name = 0xFFFFFFFFFFFFFFFF",
    "FieldQuery": "select id from user where 1 != 1",
    "Vindex": "name_user_map",
    "Values": 18446744073709551615
  }
}

# Single table in clause list arg
"select id from user where name in ::list"
{
  "Original": "select id from user where name in ::list",
  "Instructions": {
    "PlanID": "SelectIN",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select id from user where name in ::_vals",
    "FieldQuery": "select id from user where 1 != 1",
    "Vindex": "name_user_map",
    "Values": "::list"
  }
}

# Multi-table unique vindex constraint
"select user_extra.id from user join user_extra on user.id = user_extra.user_id where user.id = 5"
{
  "Original": "select user_extra.id from user join user_extra on user.id = user_extra.user_id where user.id = 5",
  "Instructions": {
    "PlanID": "SelectEqualUnique",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select user_extra.id from user join user_extra on user.id = user_extra.user_id where user.id = 5",
    "FieldQuery": "select user_extra.id from user join user_extra where 1 != 1",
    "Vindex": "user_index",
    "Values": 5
  }
}

# Multi-table unique vindex constraint on right table
"select user_extra.id from user join user_extra on user.id = user_extra.user_id where user_extra.user_id = 5"
{
  "Original": "select user_extra.id from user join user_extra on user.id = user_extra.user_id where user_extra.user_id = 5",
  "Instructions": {
    "PlanID": "SelectEqualUnique",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select user_extra.id from user join user_extra on user.id = user_extra.user_id where user_extra.user_id = 5",
    "FieldQuery": "select user_extra.id from user join user_extra where 1 != 1",
    "Vindex": "user_index",
    "Values": 5
  }
}

# Multi-table unique vindex constraint on left table of left join
"select user_extra.id from user left join user_extra on user.id = user_extra.user_id where user.id = 5"
{
  "Original": "select user_extra.id from user left join user_extra on user.id = user_extra.user_id where user.id = 5",
  "Instructions": {
    "PlanID": "SelectEqualUnique",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select user_extra.id from user left join user_extra on user.id = user_extra.user_id where user.id = 5",
    "FieldQuery": "select user_extra.id from user left join user_extra on 1 != 1 where 1 != 1",
    "Vindex": "user_index",
    "Values": 5
  }
}

# Multi-table unique vindex constraint on left-joined right table
"select user_extra.id from user left join user_extra on user.id = user_extra.user_id where user_extra.user_id = 5"
{
  "Original": "select user_extra.id from user left join user_extra on user.id = user_extra.user_id where user_extra.user_id = 5",
  "Instructions": {
    "PlanID": "SelectScatter",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select user_extra.id from user left join user_extra on user.id = user_extra.user_id where user_extra.user_id = 5",
    "FieldQuery": "select user_extra.id from user left join user_extra on 1 != 1 where 1 != 1"
  }
}

# Multi-route unique vindex constraint
"select user_extra.id from user join user_extra on user.col = user_extra.col where user.id = 5"
{
  "Original": "select user_extra.id from user join user_extra on user.col = user_extra.col where user.id = 5",
  "Instructions": {
    "Left": {
      "PlanID": "SelectEqualUnique",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select user.col from user where user.id = 5",
      "FieldQuery": "select user.col from user where 1 != 1",
      "Vindex": "user_index",
      "Values": 5
    },
    "Right": {
      "PlanID": "SelectScatter",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select user_extra.id from user_extra where user_extra.col = :col",
      "FieldQuery": "select user_extra.id from user_extra where 1 != 1",
      "JoinVars": {
        "col": {}
      }
    },
    "Cols": [
      1
    ],
    "Vars": {
      "col": 0
    }
  }
}

# Multi-route unique vindex route on both routes
"select user_extra.id from user join user_extra on user.col = user_extra.col where user.id = 5 and user_extra.user_id = 5"
{
  "Original": "select user_extra.id from user join user_extra on user.col = user_extra.col where user.id = 5 and user_extra.user_id = 5",
  "Instructions": {
    "Left": {
      "PlanID": "SelectEqualUnique",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select user.col from user where user.id = 5",
      "FieldQuery": "select user.col from user where 1 != 1",
      "Vindex": "user_index",
      "Values": 5
    },
    "Right": {
      "PlanID": "SelectEqualUnique",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select user_extra.id from user_extra where user_extra.col = :col and user_extra.user_id = 5",
      "FieldQuery": "select user_extra.id from user_extra where 1 != 1",
      "Vindex": "user_index",
      "Values": 5,
      "JoinVars": {
        "col": {}
      }
    },
    "Cols": [
      1
    ],
    "Vars": {
      "col": 0
    }
  }
}

# Multi-route with cross-route constraint
"select user_extra.id from user join user_extra on user.col = user_extra.col where user_extra.user_id = user.col"
{
  "Original": "select user_extra.id from user join user_extra on user.col = user_extra.col where user_extra.user_id = user.col",
  "Instructions": {
    "Left": {
      "PlanID": "SelectScatter",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select user.col from user",
      "FieldQuery": "select user.col from user where 1 != 1"
    },
    "Right": {
      "PlanID": "SelectEqualUnique",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select user_extra.id from user_extra where user_extra.col = :col and user_extra.user_id = :col",
      "FieldQuery": "select user_extra.id from user_extra where 1 != 1",
      "Vindex": "user_index",
      "Values": ":col",
      "JoinVars": {
        "col": {}
      }
    },
    "Cols": [
      1
    ],
    "Vars": {
      "col": 0
    }
  }
}

# Multi-route with non-route constraint, should use first route.
"select user_extra.id from user join user_extra on user.col = user_extra.col where 1 = 1"
{
  "Original": "select user_extra.id from user join user_extra on user.col = user_extra.col where 1 = 1",
  "Instructions": {
    "Left": {
      "PlanID": "SelectScatter",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select user.col from user where 1 = 1",
      "FieldQuery": "select user.col from user where 1 != 1"
    },
    "Right": {
      "PlanID": "SelectScatter",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select user_extra.id from user_extra where user_extra.col = :col",
      "FieldQuery": "select user_extra.id from user_extra where 1 != 1",
      "JoinVars": {
        "col": {}
      }
    },
    "Cols": [
      1
    ],
    "Vars": {
      "col": 0
    }
  }
}

# Route with multiple route constraints, SelectIN is the best constraint.
"select id from user where user.col = 5 and user.id in (1, 2)"
{
  "Original": "select id from user where user.col = 5 and user.id in (1, 2)",
  "Instructions": {
    "PlanID": "SelectIN",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select id from user where user.col = 5 and user.id in ::_vals",
    "FieldQuery": "select id from user where 1 != 1",
    "Vindex": "user_index",
    "Values": [
      1,
      2
    ]
  }
}

# Route with multiple route constraints, SelectEqual is the best constraint.
"select id from user where user.col = 5 and user.id in (1, 2) and user.name = 'aa'"
{
  "Original": "select id from user where user.col = 5 and user.id in (1, 2) and user.name = 'aa'",
  "Instructions": {
    "PlanID": "SelectEqual",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select id from user where user.col = 5 and user.id in (1, 2) and user.name = 'aa'",
    "FieldQuery": "select id from user where 1 != 1",
    "Vindex": "name_user_map",
    "Values": "aa"
  }
}

# Route with multiple route constraints, SelectEqualUnique is the best constraint.
"select id from user where user.col = 5 and user.id in (1, 2) and user.name = 'aa' and user.id = 1"
{
  "Original": "select id from user where user.col = 5 and user.id in (1, 2) and user.name = 'aa' and user.id = 1",
  "Instructions": {
    "PlanID": "SelectEqualUnique",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select id from user where user.col = 5 and user.id in (1, 2) and user.name = 'aa' and user.id = 1",
    "FieldQuery": "select id from user where 1 != 1",
    "Vindex": "user_index",
    "Values": 1
  }
}

# Route with multiple route constraints, SelectEqualUnique is the best constraint, order reversed.
"select id from user where user.id = 1 and user.name = 'aa' and user.id in (1, 2) and user.col = 5"
{
  "Original": "select id from user where user.id = 1 and user.name = 'aa' and user.id in (1, 2) and user.col = 5",
  "Instructions": {
    "PlanID": "SelectEqualUnique",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select id from user where user.id = 1 and user.name = 'aa' and user.id in (1, 2) and user.col = 5",
    "FieldQuery": "select id from user where 1 != 1",
    "Vindex": "user_index",
    "Values": 1
  }
}

# Route with OR and AND clause, must parenthesize correctly.
"select id from user where user.id = 1 or user.name = 'aa' and user.id in (1, 2)"
{
  "Original": "select id from user where user.id = 1 or user.name = 'aa' and user.id in (1, 2)",
  "Instructions": {
    "PlanID": "SelectScatter",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select id from user where (user.id = 1 or user.name = 'aa' and user.id in (1, 2))",
    "FieldQuery": "select id from user where 1 != 1"
  }
}

# Unsharded route
"select main1.id from user join main1 where main1.id = user.id"
{
  "Original": "select main1.id from user join main1 where main1.id = user.id",
  "Instructions": {
    "Left": {
      "PlanID": "SelectScatter",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select user.id from user",
      "FieldQuery": "select user.id from user where 1 != 1"
    },
    "Right": {
      "PlanID": "SelectUnsharded",
      "Keyspace": {
        "Name": "main",
        "Sharded": false
      },
      "Query": "select main1.id from main1 where main1.id = :id",
      "FieldQuery": "select main1.id from main1 where 1 != 1",
      "JoinVars": {
        "id": {}
      }
    },
    "Cols": [
      1
    ],
    "Vars": {
      "id": 0
    }
  }
}

# subquery
"select u.m from user_extra join user u where u.id in (select m2 from user where user.id = u.id and user_extra.col = user.col) and u.id in (user_extra.col, 1)"
{
  "Original": "select u.m from user_extra join user u where u.id in (select m2 from user where user.id = u.id and user_extra.col = user.col) and u.id in (user_extra.col, 1)",
  "Instructions": {
    "Left": {
      "PlanID": "SelectScatter",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select user_extra.col from user_extra",
      "FieldQuery": "select user_extra.col from user_extra where 1 != 1"
    },
    "Right": {
      "PlanID": "SelectIN",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select u.m from user as u where u.id in (select m2 from user where user.id = u.id and user.col = :col) and u.id in ::_vals",
      "FieldQuery": "select u.m from user as u where 1 != 1",
      "Vindex": "user_index",
      "Values": [
        ":col",
        1
      ],
      "JoinVars": {
        "col": {}
      }
    },
    "Cols": [
      1
    ],
    "Vars": {
      "col": 0
    }
  }
}

# nested subquery
"select u.m from user_extra join user u where u.id in (select m2 from user where user.id = u.id and user_extra.col = user.col and user.id in (select m3 from user_extra where user_extra.user_id = user.id)) and u.id in (user_extra.col, 1)"
{
  "Original": "select u.m from user_extra join user u where u.id in (select m2 from user where user.id = u.id and user_extra.col = user.col and user.id in (select m3 from user_extra where user_extra.user_id = user.id)) and u.id in (user_extra.col, 1)",
  "Instructions": {
    "Left": {
      "PlanID": "SelectScatter",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select user_extra.col from user_extra",
      "FieldQuery": "select user_extra.col from user_extra where 1 != 1"
    },
    "Right": {
      "PlanID": "SelectIN",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select u.m from user as u where u.id in (select m2 from user where user.id = u.id and user.col = :col and user.id in (select m3 from user_extra where user_extra.user_id = user.id)) and u.id in ::_vals",
      "FieldQuery": "select u.m from user as u where 1 != 1",
      "Vindex": "user_index",
      "Values": [
        ":col",
        1
      ],
      "JoinVars": {
        "col": {}
      }
    },
    "Cols": [
      1
    ],
    "Vars": {
      "col": 0
    }
  }
}

# Correlated subquery in where clause
"select id from user where user.col in (select user_extra.col from user_extra where user_extra.user_id = user.id)"
{
  "Original": "select id from user where user.col in (select user_extra.col from user_extra where user_extra.user_id = user.id)",
  "Instructions": {
    "PlanID": "SelectScatter",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select id from user where user.col in (select user_extra.col from user_extra where user_extra.user_id = user.id)",
    "FieldQuery": "select id from user where 1 != 1"
  }
}

# outer and inner subquery route by same int val
"select id from user where id = 5 and user.col in (select user_extra.col from user_extra where user_extra.user_id = 5)"
{
  "Original": "select id from user where id = 5 and user.col in (select user_extra.col from user_extra where user_extra.user_id = 5)",
  "Instructions": {
    "PlanID": "SelectEqualUnique",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select id from user where id = 5 and user.col in (select user_extra.col from user_extra where user_extra.user_id = 5)",
    "FieldQuery": "select id from user where 1 != 1",
    "Vindex": "user_index",
    "Values": 5
  }
}

# outer and inner subquery route by same str val
"select id from user where id = 'aa' and user.col in (select user_extra.col from user_extra where user_extra.user_id = 'aa')"
{
  "Original": "select id from user where id = 'aa' and user.col in (select user_extra.col from user_extra where user_extra.user_id = 'aa')",
  "Instructions": {
    "PlanID": "SelectEqualUnique",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select id from user where id = 'aa' and user.col in (select user_extra.col from user_extra where user_extra.user_id = 'aa')",
    "FieldQuery": "select id from user where 1 != 1",
    "Vindex": "user_index",
    "Values": "aa"
  }
}

# outer and inner subquery route by same val arg
"select id from user where id = :a and user.col in (select user_extra.col from user_extra where user_extra.user_id = :a)"
{
  "Original": "select id from user where id = :a and user.col in (select user_extra.col from user_extra where user_extra.user_id = :a)",
  "Instructions": {
    "PlanID": "SelectEqualUnique",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select id from user where id = :a and user.col in (select user_extra.col from user_extra where user_extra.user_id = :a)",
    "FieldQuery": "select id from user where 1 != 1",
    "Vindex": "user_index",
    "Values": ":a"
  }
}

# outer and inner subquery route by same outermost column value
"select id2 from user uu where id in (select id from user where id = uu.id and user.col in (select user_extra.col from user_extra where user_extra.user_id = uu.id))"
{
  "Original": "select id2 from user uu where id in (select id from user where id = uu.id and user.col in (select user_extra.col from user_extra where user_extra.user_id = uu.id))",
  "Instructions": {
    "PlanID": "SelectScatter",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select id2 from user as uu where id in (select id from user where id = uu.id and user.col in (select user_extra.col from user_extra where user_extra.user_id = uu.id))",
    "FieldQuery": "select id2 from user as uu where 1 != 1"
  }
}

# outer and inner subquery route reference the same "uu.id" name
# but they refer to different things. The first reference is to the outermost query,
# and the second reference is to the the innermost 'from' subquery.
"select id2 from user uu where id in (select id from user where id = uu.id and user.col in (select col from (select id from user_extra where user_id = 5) uu where uu.user_id = uu.id))"
"unsupported: subquery and parent route to different shards"

# outer and inner subquery match different types
"select id from user where id = 1 and user.col in (select user_extra.col from user_extra where user_extra.user_id = :a)"
"unsupported: subquery and parent route to different shards"

# join on having clause
"select e.col, u.id uid, e.id eid from user u join user_extra e having uid = eid"
{
  "Original": "select e.col, u.id uid, e.id eid from user u join user_extra e having uid = eid",
  "Instructions": {
    "Left": {
      "PlanID": "SelectScatter",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select u.id as uid from user as u",
      "FieldQuery": "select u.id as uid from user as u where 1 != 1"
    },
    "Right": {
      "PlanID": "SelectScatter",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select e.col, e.id as eid from user_extra as e having eid = :uid",
      "FieldQuery": "select e.col, e.id as eid from user_extra as e where 1 != 1",
      "JoinVars": {
        "uid": {}
      }
    },
    "Cols": [
      1,
      -1,
      2
    ],
    "Vars": {
      "uid": 0
    }
  }
}

# wire-up join with join, going left
"select u1.id from user u1 join user u2 join user u3 where u3.col = u1.col"
{
  "Original": "select u1.id from user u1 join user u2 join user u3 where u3.col = u1.col",
  "Instructions": {
    "Left": {
      "Left": {
        "PlanID": "SelectScatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "Query": "select u1.id, u1.col from user as u1",
        "FieldQuery": "select u1.id, u1.col from user as u1 where 1 != 1"
      },
      "Right": {
        "PlanID": "SelectScatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "Query": "select 1 from user as u2",
        "FieldQuery": "select 1 from user as u2 where 1 != 1"
      },
      "Cols": [
        -1,
        -2
      ]
    },
    "Right": {
      "PlanID": "SelectScatter",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select 1 from user as u3 where u3.col = :col",
      "FieldQuery": "select 1 from user as u3 where 1 != 1",
      "JoinVars": {
        "col": {}
      }
    },
    "Cols": [
      -1
    ],
    "Vars": {
      "col": 1
    }
  }
}

# wire-up join with join, going left, then right
"select u1.id from user u1 join user u2 join user u3 where u3.col = u2.col"
{
  "Original": "select u1.id from user u1 join user u2 join user u3 where u3.col = u2.col",
  "Instructions": {
    "Left": {
      "Left": {
        "PlanID": "SelectScatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "Query": "select u1.id from user as u1",
        "FieldQuery": "select u1.id from user as u1 where 1 != 1"
      },
      "Right": {
        "PlanID": "SelectScatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "Query": "select u2.col from user as u2",
        "FieldQuery": "select u2.col from user as u2 where 1 != 1"
      },
      "Cols": [
        -1,
        1
      ]
    },
    "Right": {
      "PlanID": "SelectScatter",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select 1 from user as u3 where u3.col = :col",
      "FieldQuery": "select 1 from user as u3 where 1 != 1",
      "JoinVars": {
        "col": {}
      }
    },
    "Cols": [
      -1
    ],
    "Vars": {
      "col": 1
    }
  }
}

# wire-up join with join, reuse existing result from a lower join
"select u1.id from user u1 join user u2 on u2.col = u1.col join user u3 where u3.col = u1.col"
{
  "Original": "select u1.id from user u1 join user u2 on u2.col = u1.col join user u3 where u3.col = u1.col",
  "Instructions": {
    "Left": {
      "Left": {
        "PlanID": "SelectScatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "Query": "select u1.id, u1.col from user as u1",
        "FieldQuery": "select u1.id, u1.col from user as u1 where 1 != 1"
      },
      "Right": {
        "PlanID": "SelectScatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "Query": "select 1 from user as u2 where u2.col = :col",
        "FieldQuery": "select 1 from user as u2 where 1 != 1",
        "JoinVars": {
          "col": {}
        }
      },
      "Cols": [
        -1,
        -2
      ],
      "Vars": {
        "col": 1
      }
    },
    "Right": {
      "PlanID": "SelectScatter",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select 1 from user as u3 where u3.col = :col",
      "FieldQuery": "select 1 from user as u3 where 1 != 1",
      "JoinVars": {
        "col": {}
      }
    },
    "Cols": [
      -1
    ],
    "Vars": {
      "col": 1
    }
  }
}

# wire-up join with join, reuse existing result from a lower join.
# You need two levels of join nesting to test this: when u3 requests
# col from u1, the u1-u2 joins exports the column to u2-u3. When
# u4 requests it, it should be reused from the u1-u2 join.
"select u1.id from user u1 join user u2 join user u3 on u3.id = u1.col join user u4 where u4.col = u1.col"
{
  "Original": "select u1.id from user u1 join user u2 join user u3 on u3.id = u1.col join user u4 where u4.col = u1.col",
  "Instructions": {
    "Left": {
      "Left": {
        "Left": {
          "PlanID": "SelectScatter",
          "Keyspace": {
            "Name": "user",
            "Sharded": true
          },
          "Query": "select u1.id, u1.col from user as u1",
          "FieldQuery": "select u1.id, u1.col from user as u1 where 1 != 1"
        },
        "Right": {
          "PlanID": "SelectScatter",
          "Keyspace": {
            "Name": "user",
            "Sharded": true
          },
          "Query": "select 1 from user as u2",
          "FieldQuery": "select 1 from user as u2 where 1 != 1"
        },
        "Cols": [
          -1,
          -2
        ]
      },
      "Right": {
        "PlanID": "SelectEqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "Query": "select 1 from user as u3 where u3.id = :col",
        "FieldQuery": "select 1 from user as u3 where 1 != 1",
        "Vindex": "user_index",
        "Values": ":col",
        "JoinVars": {
          "col": {}
        }
      },
      "Cols": [
        -1,
        -2
      ],
      "Vars": {
        "col": 1
      }
    },
    "Right": {
      "PlanID": "SelectScatter",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select 1 from user as u4 where u4.col = :col",
      "FieldQuery": "select 1 from user as u4 where 1 != 1",
      "JoinVars": {
        "col": {}
      }
    },
    "Cols": [
      -1
    ],
    "Vars": {
      "col": 1
    }
  }
}

# Test reuse of join var already being supplied to the right of a node.
"select u1.id from user u1 join (user u2 join user u3) where u2.id = u1.col and u3.id = u1.col"
{
  "Original": "select u1.id from user u1 join (user u2 join user u3) where u2.id = u1.col and u3.id = u1.col",
  "Instructions": {
    "Left": {
      "PlanID": "SelectScatter",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select u1.id, u1.col from user as u1",
      "FieldQuery": "select u1.id, u1.col from user as u1 where 1 != 1"
    },
    "Right": {
      "Left": {
        "PlanID": "SelectEqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "Query": "select 1 from user as u2 where u2.id = :col",
        "FieldQuery": "select 1 from user as u2 where 1 != 1",
        "Vindex": "user_index",
        "Values": ":col",
        "JoinVars": {
          "col": {}
        }
      },
      "Right": {
        "PlanID": "SelectEqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "Query": "select 1 from user as u3 where u3.id = :col",
        "FieldQuery": "select 1 from user as u3 where 1 != 1",
        "Vindex": "user_index",
        "Values": ":col",
        "JoinVars": {
          "col": {}
        }
      }
    },
    "Cols": [
      -1
    ],
    "Vars": {
      "col": 1
    }
  }
}
