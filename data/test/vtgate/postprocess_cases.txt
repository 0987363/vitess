# Group by unsharded
"select col1, col2 from main1 group by col2"
{
  "Original": "select col1, col2 from main1 group by col2",
  "Instructions": {
    "PlanID": "SelectUnsharded",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "Query": "select col1, col2 from main1 group by col2",
    "FieldQuery": "select col1, col2 from main1 where 1 != 1"
  }
}

# Group by on unique sharded
"select col1, col2 from user where id = 1 group by col2"
{
  "Original": "select col1, col2 from user where id = 1 group by col2",
  "Instructions": {
    "PlanID": "SelectEqualUnique",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select col1, col2 from user where id = 1 group by col2",
    "FieldQuery": "select col1, col2 from user where 1 != 1",
    "Vindex": "user_index",
    "Values": 1
  }
}

# Group by on unique vindex
"select col1, id from user group by id"
{
  "Original": "select col1, id from user group by id",
  "Instructions": {
    "PlanID": "SelectScatter",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select col1, id from user group by id",
    "FieldQuery": "select col1, id from user where 1 != 1"
  }
}

# Group by references non-existent col
"select id from user group by col"
"symbol col not found"

# HAVING multi-route
"select user.col1 as a, user.col2, user_extra.col3 from user join user_extra having 1 = 1 and a = 1 and a = user.col2 and user_extra.col3 = 1"
{
  "Original": "select user.col1 as a, user.col2, user_extra.col3 from user join user_extra having 1 = 1 and a = 1 and a = user.col2 and user_extra.col3 = 1",
  "Instructions": {
    "Left": {
      "PlanID": "SelectScatter",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select user.col1 as a, user.col2 from user having 1 = 1 and a = 1 and a = user.col2",
      "FieldQuery": "select user.col1 as a, user.col2 from user where 1 != 1"
    },
    "Right": {
      "PlanID": "SelectScatter",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select user_extra.col3 from user_extra having user_extra.col3 = 1",
      "FieldQuery": "select user_extra.col3 from user_extra where 1 != 1"
    },
    "Cols": [
      -1,
      -2,
      1
    ]
  }
}

# ORDER BY
"select user.col1 as a, user.col2, music.col3 from user join music on user.id = music.id where user.id = 1 order by a asc, user.col2 desc, music.col3 asc"
{
  "Original": "select user.col1 as a, user.col2, music.col3 from user join music on user.id = music.id where user.id = 1 order by a asc, user.col2 desc, music.col3 asc",
  "Instructions": {
    "Left": {
      "PlanID": "SelectEqualUnique",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select user.col1 as a, user.col2, user.id from user where user.id = 1 order by a asc, user.col2 desc",
      "FieldQuery": "select user.col1 as a, user.col2, user.id from user where 1 != 1",
      "Vindex": "user_index",
      "Values": 1
    },
    "Right": {
      "PlanID": "SelectEqualUnique",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
      "Query": "select music.col3 from music where music.id = :id order by music.col3 asc",
      "FieldQuery": "select music.col3 from music where 1 != 1",
      "Vindex": "music_user_map",
      "Values": ":id",
      "JoinVars": {
        "id": {}
      }
    },
    "Cols": [
      -1,
      -2,
      1
    ],
    "Vars": {
      "id": 2
    }
  }
}

# LIMIT
"select col1 from user where id = 1 limit 1"
{
  "Original": "select col1 from user where id = 1 limit 1",
  "Instructions": {
    "PlanID": "SelectEqualUnique",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select col1 from user where id = 1 limit 1",
    "FieldQuery": "select col1 from user where 1 != 1",
    "Vindex": "user_index",
    "Values": 1
  }
}
