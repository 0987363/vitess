// This file contains all the types and servers necessary to make
// RPC calls to VtTablet for the binlog protocol.

syntax = "proto3";

package binlogdata;

import "topodata.proto";
import "replicationdata.proto";

// Charset is the per-statement charset info from a QUERY_EVENT binlog entry.
message Charset {
  // @@session.character_set_client
  int32 client = 1;
  // @@session.collation_connection
  int32 conn = 2;
  // @@session.collation_server
  int32 server = 3;
}

// BinlogTransaction describes a transaction inside the binlogs.
message BinlogTransaction {
  message Statement {
    enum Category {
      BL_UNRECOGNIZED = 0;
      BL_BEGIN = 1;
      BL_COMMIT = 2;
      BL_ROLLBACK = 3;
      BL_DML = 4;
      BL_DDL = 5;
      BL_SET = 6;
    }

    // what type of statement is this?
    Category category = 1;

    // charset of this statement, if different from pre-negotiated default.
    Charset charset = 3;

    // the sql
    bytes sql = 2;
  }

  // the statements in this transaction
  repeated Statement statements = 1;

  // the timestamp of the statements
  int64 timestamp = 2;

  // the Global Transaction ID after the statements have been applied
  string gtid = 3;
}

// StreamUpdateRequest is the payload to StreamUpdate
message StreamUpdateRequest{
  // where to start
  replicationdata.Position position = 1;
}

// StreamUpdateResponse is the response from StreamUpdate
message StreamUpdateResponse{
}

// StreamKeyRangeRequest is the payload to StreamKeyRange
message StreamKeyRangeRequest {
  // where to start
  replicationdata.Position position = 1;

  // type to get
  topodata.KeyspaceIdType keyspace_id_type = 2;

  // what to get
  topodata.KeyRange key_range = 3;

  // default charset on the player side
  Charset charset = 4;
}

// StreamKeyRangeResponse is the response from StreamKeyRange
message StreamKeyRangeResponse{
  BinlogTransaction binlog_transaction = 1;
}

// StreamTablesRequest is the payload to StreamTables
message StreamTablesRequest {
  // where to start
  replicationdata.Position position = 1;

  // what to get
  repeated string tables = 2;

  // default charset on the player side
  Charset charset = 3;
}

// StreamTablesResponse is the response from StreamTables
message StreamTablesResponse {
  BinlogTransaction binlog_transaction = 1;
}
